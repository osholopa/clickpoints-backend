{"version":3,"sources":["img/button.png","audio/win.mp3","services/socket.js","components/Button.js","components/Message.js","components/App.js","index.js"],"names":["module","exports","socket","socketIOClient","props","playAudio","setShowWinMsg","setWinPoints","points","setPoints","setNextWin","emit","on","data","nextWin","setTimeout","Button","document","getElementsByClassName","play","src","button","className","alt","onClick","window","confirm","localStorage","setItem","win","BouncyMsg","styled","div","Message","style","content","App","useState","showWinMsg","winPoints","useEffect","isNaN","parseInt","getItem","opacity","ReactDOM","render","getElementById"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,qNCIrCC,E,MAASC,GAFH,KAgCG,EApBD,SAACC,EAAOC,GAAe,IAC3BC,EAA+DF,EAA/DE,cAAeC,EAAgDH,EAAhDG,aAAcC,EAAkCJ,EAAlCI,OAAQC,EAA0BL,EAA1BK,UAAWC,EAAeN,EAAfM,WAExDR,EAAOS,KAAK,SAEZT,EAAOU,GAAG,WAAW,SAAAC,GACnBH,EAAWG,EAAKC,YAGlBZ,EAAOU,GAAG,OAAO,SAAAC,GACfR,IACAI,EAAUD,EAAS,EAAIK,EAAKL,QAC5BD,EAAaM,EAAKL,QAClBF,GAAc,GACdS,YAAW,WACTT,GAAc,KACb,SAIQ,EA5BI,SAAAI,GACjBR,EAAOS,KAAK,cAEZT,EAAOU,GAAG,WAAW,SAAAC,GACnBH,EAAWG,EAAKC,a,iBCgCLE,EArCA,SAAAZ,GACb,IAAMC,EAAY,WACAY,SAASC,uBAAuB,iBAAiB,GACzDC,QAmBV,OACE,oCACE,yBACEC,IAAKC,IACLC,UAAU,aACVC,IAAI,SACJC,QAfoB,WACpBpB,EAAMI,OAAS,GACjBN,EAAaE,EAAOC,GACpBD,EAAMK,UAAUL,EAAMI,OAAS,IAT7BiB,OAAOC,QAAQ,+CACjBtB,EAAMK,UAAU,IAChBkB,aAAaC,QAAQ,SAAUxB,EAAMI,YAqBrC,2BAAOc,UAAW,iBAChB,4BAAQF,IAAKS,S,mMCjCrB,IAAIC,E,MAAYC,EAAOC,IAAV,KAkBEC,EAVC,SAAA7B,GACd,OACE,oCACE,kBAAC0B,EAAD,CAAWI,MAAO9B,EAAM8B,OACtB,6BAAM9B,EAAM+B,YCoDLC,EA7DH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACT7B,EADS,KACDC,EADC,OAEoB4B,oBAAS,GAF7B,mBAETC,EAFS,KAEGhC,EAFH,OAGkB+B,mBAAS,GAH3B,mBAGTE,EAHS,KAGEhC,EAHF,OAIc8B,mBAAS,GAJvB,mBAITvB,EAJS,KAIAJ,EAJA,KAyBhB,OAXA8B,qBAAU,WACHC,MAAMC,SAASf,aAAagB,QAAQ,aACvClC,EAAUiC,SAASf,aAAagB,QAAQ,YAE1CzC,EAAkBQ,KACjB,IAEH8B,qBAAU,WACRb,aAAaC,QAAQ,SAAUpB,KAC9B,CAACA,IAGF,yBAAKc,UAAU,OACb,4BAAQA,UAAU,cAChB,4CAEF,6BACGgB,EACC,kBAAC,EAAD,CACEJ,MAvBK,CACbU,QAAS,KAuBDT,QAAO,kBAAaI,EAAb,cAGT,kBAAC,EAAD,CACEL,MAhCU,CAClBU,QAAS,GAgCDT,QAAO,kBAAaI,EAAb,eAIb,4DACA,iDACA,2CAAiB/B,GACjB,wCAAcM,EAAd,WACA,kBAAC,EAAD,CACEN,OAAQA,EACRC,UAAWA,EACXF,aAAcA,EACdD,cAAeA,EACfI,WAAYA,IAEd,kDACA,oDACA,uDCzDNmC,IAASC,OAAO,kBAAC,EAAD,MAAS7B,SAAS8B,eAAe,W","file":"static/js/main.ef60fa85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/button.7e4278af.png\";","module.exports = __webpack_public_path__ + \"static/media/win.02f1227a.mp3\";","import socketIOClient from \"socket.io-client\"\r\n\r\nconst url = \"/\"\r\n\r\nconst socket = socketIOClient(url)\r\n\r\nconst getNextWin = setNextWin => {\r\n  socket.emit(\"getNextWin\")\r\n\r\n  socket.on(\"nextWin\", data => {\r\n    setNextWin(data.nextWin)\r\n  })\r\n}\r\n\r\nconst click = (props, playAudio) => {\r\n  const { setShowWinMsg, setWinPoints, points, setPoints, setNextWin } = props\r\n\r\n  socket.emit(\"click\")\r\n\r\n  socket.on(\"nextWin\", data => {\r\n    setNextWin(data.nextWin)\r\n  })\r\n\r\n  socket.on(\"win\", data => {\r\n    playAudio()\r\n    setPoints(points - 1 + data.points)\r\n    setWinPoints(data.points)\r\n    setShowWinMsg(true)\r\n    setTimeout(() => {\r\n      setShowWinMsg(false)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport default { click, getNextWin }\r\n","import React from \"react\"\r\nimport button from \"../img/button.png\"\r\nimport socket from \"../services/socket\"\r\nimport win from \"../audio/win.mp3\"\r\n\r\nconst Button = props => {\r\n  const playAudio = () => {\r\n    const audioEl = document.getElementsByClassName(\"audio-element\")[0]\r\n    audioEl.play()\r\n  }\r\n\r\n  const restartGame = () => {\r\n    if (window.confirm(\"Oops, you're out of points. Restart game?\")) {\r\n      props.setPoints(20)\r\n      localStorage.setItem(\"points\", props.points)\r\n    }\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    if (props.points > 0) {\r\n      socket.click(props, playAudio)\r\n      props.setPoints(props.points - 1)\r\n    } else {\r\n      restartGame()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        src={button}\r\n        className=\"App-button\"\r\n        alt=\"button\"\r\n        onClick={handleButtonClick}\r\n      />\r\n      <audio className={\"audio-element\"}>\r\n        <source src={win}></source>\r\n      </audio>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nlet BouncyMsg = styled.div`\r\n  color: yellow;\r\n  border: 1px solid yellow;\r\n  padding: 15px;\r\n  border-radius: 15px;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst Message = props => {\r\n  return (\r\n    <>\r\n      <BouncyMsg style={props.style}>\r\n        <div>{props.content}</div>\r\n      </BouncyMsg>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Button from \"./Button\"\r\nimport \"./App.css\"\r\nimport Message from \"./Message\"\r\nimport socket from \"../services/socket\"\r\n\r\nconst App = () => {\r\n  const [points, setPoints] = useState(20)\r\n  const [showWinMsg, setShowWinMsg] = useState(false)\r\n  const [winPoints, setWinPoints] = useState(0)\r\n  const [nextWin, setNextWin] = useState(0)\r\n\r\n  const transparent = {\r\n    opacity: 0\r\n  }\r\n\r\n  const opaque = {\r\n    opacity: 100\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isNaN(parseInt(localStorage.getItem(\"points\")))) {\r\n      setPoints(parseInt(localStorage.getItem(\"points\")))\r\n    }\r\n    socket.getNextWin(setNextWin)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"points\", points)\r\n  }, [points])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Clickpoints</h1>\r\n      </header>\r\n      <div>\r\n        {showWinMsg ? (\r\n          <Message\r\n            style={opaque}\r\n            content={`You won ${winPoints} points!`}\r\n          ></Message>\r\n        ) : (\r\n          <Message\r\n            style={transparent}\r\n            content={`You won ${winPoints} points!`}\r\n          ></Message>\r\n        )}\r\n      </div>\r\n      <p>Multiplayer button click game</p>\r\n      <p>Press the button !</p>\r\n      <p>Your points: {points}</p>\r\n      <p>Next win: {nextWin} clicks</p>\r\n      <Button\r\n        points={points}\r\n        setPoints={setPoints}\r\n        setWinPoints={setWinPoints}\r\n        setShowWinMsg={setShowWinMsg}\r\n        setNextWin={setNextWin}\r\n      ></Button>\r\n      <p>10 clicks: 5 points</p>\r\n      <p>100 clicks: 40 points</p>\r\n      <p>500 clicks: 250 points</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./components/App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}